import java.text.DecimalFormat

apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 32
        setProperty("archivesBaseName", getVersion())
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug{
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lint {
        abortOnError true
        checkReleaseBuilds true
        enable 'StopShip'
        fatal 'StopShip'
    }
}

repositories {
    maven {
        url "https://maven.google.com/"
    }
}

dependencies {
    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'

    api("io.socket:socket.io-client:2.0.0", {
        exclude group: 'org.json', module: 'json'
    })
    api "org.greenrobot:greendao:3.3.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

static def startOfDay() {
    def now = new Date().getTime()
    def cal = Calendar.getInstance()
    cal.set(2022, 01, 21, 0, 0, 0)
    def start = cal.getTimeInMillis()

    return new DecimalFormat("#").format(Math.floor(Math.abs(now - start) / (1000 * 3600 * 24)))
}

static def minuteOfDay() {
    def now = new Date()
    return (now.format("HH").toInteger() * 60) + now.format("mm").toInteger()
}

static def getRelease() {
    /**
     * 0 – альфа (прототип);
     * 1 – бета (бета);
     * 2 – выпуск-кандидат (передан на тестирование заказчику);
     * 3 – публичный выпуск (окончательно передан заказчику).
     */
    return 1
}

static def getVersion() {
    return "4." + startOfDay() + "." + getRelease() + "." + minuteOfDay()
}
